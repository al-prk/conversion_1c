require 'spec_helper'
require 'conversion_1c/conversion_1c'

require 'nokogiri'


module Conversion1C
	describe Conversion do
		describe '#to_a' do
			it "return empty array for empty data file" do
				data = Nokogiri::XML(
				<<-DAT
					<?xml version="1.0" encoding="utf-8"?>
					<ФайлОбмена ВерсияФормата="2.0" ДатаВыгрузки="2014-08-04T17:37:37" НачалоПериодаВыгрузки="0001-01-01T00:00:00" ОкончаниеПериодаВыгрузки="0001-01-01T00:00:00" ИмяКонфигурацииИсточника="УправлениеТорговлей" ИмяКонфигурацииПриемника="Конфигурация" ИдПравилКонвертации="259834e2-043a-48ff-a0ac-7ce7227214b4" Комментарий="">
					<ПравилаОбмена>
					</ПравилаОбмена>				
					</ФайлОбмена>
				DAT
				)
				conversion = Conversion.new(data)
				expect(conversion.to_a).to be_empty
			end

			it "return objects generated by ConversionObject" do
				data = Nokogiri::XML(
				<<-DAT
					<?xml version="1.0" encoding="utf-8"?>
					<ФайлОбмена ВерсияФормата="2.0" ДатаВыгрузки="2014-08-04T17:37:37" НачалоПериодаВыгрузки="0001-01-01T00:00:00" ОкончаниеПериодаВыгрузки="0001-01-01T00:00:00" ИмяКонфигурацииИсточника="УправлениеТорговлей" ИмяКонфигурацииПриемника="Конфигурация" ИдПравилКонвертации="259834e2-043a-48ff-a0ac-7ce7227214b4" Комментарий="">
					<ПравилаОбмена>
					</ПравилаОбмена>				
					<Объект></Объект>
					<Объект></Объект>
					</ФайлОбмена>
				DAT
				)
				conversion = Conversion.new(data)				
				expect(ConversionObject).to receive(:new).and_return(:one, :two)
				expect(conversion.to_a).to match_array([:one, :two])
			end			
		end
	end
end